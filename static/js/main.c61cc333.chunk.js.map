{"version":3,"sources":["serviceWorker.js","components/TodoLink/styles.js","components/TodoLink/index.js","components/TodoButton/styles.js","components/TodoButton/index.js","components/Home/index.js","constants/localStorage.js","utils/helpers.js","constants/paths.js","services/api.js","hooks/useLocalStorageReducer.js","constants/actionTypes.js","reducer/tasks.js","actions/actionCreator.js","hooks/useFetchTaskList.js","components/ErrorIndicator/styles.js","components/ErrorIndicator/index.js","components/Loader/styles.js","components/Loader/index.js","contexts/tasks.js","components/TodoListItem/styles.js","components/TodoListItem/index.js","components/TodoList/index.js","components/Todo/index.js","constants/breakpoints.js","hooks/useInputState.js","hooks/useDialog.js","hooks/useBreakpoint.js","components/TodoDialog/index.js","components/TodoForm/styles.js","components/TodoForm/index.js","components/TodoItem/styles.js","constants/routes.js","components/TodoItem/index.js","components/NoMatch/index.js","components/TodoApp/styles.js","components/TodoApp/index.js","components/ErrorBoundary/index.js","App.js","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","useStyles","makeStyles","link","textDecoration","TodoLink","children","href","color","className","attrs","classes","linkClasses","classNames","Link","component","RouterLink","to","defaultProps","button","margin","TodoButton","onClick","buttonClasses","Button","variant","fullWidth","Home","LOCAL_STORAGE","KEY","helpers","getDataById","dataArray","id","filter","data","sortById","sort","a","b","addToLocalStorage","label","localStorage","setItem","JSON","stringify","getFromLocalStorage","getItem","getNextItemIdInArr","arr","slice","getApiInstance","method","url","init","initWithData","headers","body","fetch","response","json","Error","PATHS","BASE_PATH","TASKS_PATH","api","getTasks","removeTask","addTask","text","editTask","useLocalStorageReducer","key","defaultVal","reducer","useReducer","val","parse","dispatch","useEffect","ACTION_TYPES","FETCH_INIT","FETCH_SUCCESS","FETCH_FAILURE","ADD_TASK","REMOVE_TASK","EDIT_TASK","initState","isLoading","isError","tasks","type","task","map","useFetchTaskList","fetchData","useCallback","result","sortedTaskList","paper","padding","withChildren","ErrorIndicator","Paper","Typography","align","loader","height","size","Loader","loaderClasses","Grid","justify","alignItems","container","CircularProgress","TasksContext","createContext","DispatchContext","TasksProvider","Provider","value","listItem","listItemText","whiteSpace","overflow","textOverflow","marginRight","TodoListItem","useRouteMatch","ListItem","ListItemText","memo","TodoList","useContext","tasksLength","length","List","i","Divider","Todo","BREAKPOINTS","XS","SM","MD","LG","useInputState","initialValue","useState","setValue","handleChange","target","reset","useDialog","open","setOpen","useBreakpoint","breakpoints","useTheme","useMediaQuery","down","TodoDialog","title","fullScreen","handleClose","Dialog","onClose","aria-labelledby","DialogTitle","DialogContent","DialogContentText","DialogActions","autoFocus","TodoForm","history","useHistory","useParams","handleOpen","taskLabel","onSubmit","e","preventDefault","taskAction","taskId","apiMethodName","name","apiMethod","push","message","TextField","onChange","display","position","textAlign","justifyContent","backgroundColor","textBox","flex","minWidth","typography","secondaryAction","top","right","transform","ROUTES","exact","path","onRemove","Container","Box","IconButton","aria-label","Delete","Edit","appBar","grid","fab","bottom","TodoApp","pathname","useLocation","isTaskLocation","includes","elevation","AppBar","Toolbar","xs","md","lg","item","Fab","goBack","ArrowBack","ErrorBoundary","reload","this","props","Component","App","basename","render","document","getElementById","URL","process","origin","addEventListener","contentType","get","status","indexOf","ready","unregister","checkValidServiceWorker"],"mappings":"oKAYMA,EAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MAAM,2DAqCnC,SAASC,EAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACTK,MAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBG,QACfT,UAAUC,cAAcS,YAI1BC,QAAQC,IACN,iHAKEb,GAAUA,EAAOc,UACnBd,EAAOc,SAAST,KAMlBO,QAAQC,IAAI,sCAGRb,GAAUA,EAAOe,WACnBf,EAAOe,UAAUV,WAO5BW,OAAM,SAAAC,GACLL,QAAQK,MAAM,4CAA6CA,M,+DClFlDC,EAFGC,YARH,CACbC,KAAM,CACJ,UAAW,CACTC,eAAgB,WCEhBC,EAAW,SAAC,GAAoD,IAAlDC,EAAiD,EAAjDA,SAAUC,EAAuC,EAAvCA,KAAMC,EAAiC,EAAjCA,MAAOC,EAA0B,EAA1BA,UAAcC,EAAY,uDAC7DC,EAAUV,IACVW,EAAcC,IAAWF,EAAQR,KAAMM,GAE7C,OACE,kBAACK,EAAA,EAAD,iBAAUJ,EAAV,CAAiBK,UAAWC,IAAYC,GAAIV,EAAMC,MAAOA,EAAOC,UAAWG,IACxEN,IAYPD,EAASa,aAAe,CACtBV,MAAO,UACPC,UAAW,IAGEJ,Q,SCpBAJ,EAFGC,YANH,CACbiB,OAAQ,CACNC,OAAQ,YCENC,EAAa,SAAC,GAAuD,IAArDf,EAAoD,EAApDA,SAAUE,EAA0C,EAA1CA,MAAOC,EAAmC,EAAnCA,UAAWa,EAAwB,EAAxBA,QAAYZ,EAAY,0DAClEC,EAAUV,IACVsB,EAAgBV,IAAWF,EAAQQ,OAAQV,GAEjD,OACE,kBAACe,EAAA,EAAD,iBACMd,EADN,CAEEF,MAAOA,EACPC,UAAWc,EACXD,QAASA,EACTG,QAAQ,YACRC,WAAS,IAERpB,IAYPe,EAAWH,aAAe,CACxBV,MAAO,UACPC,UAAW,GACXa,QAAS,cAGID,QC3BAM,EANF,kBACX,kBAAC,EAAD,CAAUpB,KAAK,UACb,kBAAC,EAAD,8B,4DCFWqB,EAJO,CACpBC,IAAK,S,QCiCQC,EAlCC,CACdC,YAAa,SAACC,EAAWC,GAAZ,OAAmBD,EAAUE,QAAO,SAAAC,GAAI,OAAIA,EAAKF,KAAOA,KAAI,IAAM,IAE/EG,SAAU,SAAAD,GAAI,OAAIA,EAAKE,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEL,GAAKM,EAAEN,OAE/CO,kBAAmB,SAACC,EAAON,GAAR,OAAiB1D,OAAOiE,aAAaC,QAAQF,EAAOG,KAAKC,UAAUV,KACtFW,oBAAqB,SAAAL,GAAK,OAAIhE,OAAOiE,aAAaK,QAAQN,IAE1DO,mBAAoB,SAAAC,GAClB,IADyB,GACHA,EAAIC,OAAO,GAAG,IAAM,IAClCjB,GACR,aAHyB,MAEZ,EAFY,GAGZ,GAGfkB,eAAe,WAAD,4BAAE,WAAOC,EAAQC,EAAKlB,GAApB,mBAAAG,EAAA,6DACVgB,EAAO,CAAEF,UACPG,EAAe,CACnBC,QAAS,CACP,eAAgB,oBAElBC,KAAMb,KAAKC,UAAUV,IAGvBmB,EAAOnB,EAAI,2BAAQmB,GAASC,GAAiBD,EAT/B,kBAYWI,MAAML,EAAKC,GAZtB,cAYNK,EAZM,gBAaCA,EAASC,OAbV,gFAeN,IAAIC,MAAJ,MAfM,0DAAF,uDAAC,ICTFC,EALD,CACZC,UAAW,qDACXC,WAAY,UCUCC,EATH,CACVC,SAAU,kBAAMpC,EAAQqB,eAAe,MAAvB,UAAiCW,EAAMC,WAAvC,OAAmDD,EAAME,cACzEG,WAAY,SAAAlC,GAAE,OAAIH,EAAQqB,eAAe,SAAvB,UAAoCW,EAAMC,WAA1C,OAAsDD,EAAME,WAA5D,YAA0E/B,KAC5FmC,QAAS,SAACnC,EAAIoC,GAAL,OACPvC,EAAQqB,eAAe,OAAvB,UAAkCW,EAAMC,WAAxC,OAAoDD,EAAME,YAAc,CAAE/B,KAAIoC,UAChFC,SAAU,SAACrC,EAAIoC,GAAL,OACRvC,EAAQqB,eAAe,MAAvB,UAAiCW,EAAMC,WAAvC,OAAmDD,EAAME,WAAzD,YAAuE/B,GAAM,CAAEA,KAAIoC,WCexEE,EArBgB,SAACC,EAAKC,EAAYC,GAAa,IAAD,EACjCC,qBAAWD,EAASD,GAAY,WACxD,IAAIG,EAEJ,IACE,IAAMzC,EAAOL,EAAQgB,oBAAoB0B,IAA5B,UAAuCC,GACpDG,EAAMhC,KAAKiC,MAAM1C,GACjB,SACAyC,EAAMH,EAGR,OAAOG,KAXkD,mBACpDnF,EADoD,KAC7CqF,EAD6C,KAkB3D,OAJAC,qBAAU,WACRjD,EAAQU,kBAAkBgC,EAAK/E,KAC9B,CAAC+E,EAAK/E,IAEF,CAACA,EAAOqF,I,QCZFE,EATM,CACnBC,WAAY,aACZC,cAAe,gBACfC,cAAe,gBACfC,SAAU,WACVC,YAAa,cACbC,UAAW,aCJAC,EAAY,CACvBC,WAAW,EACXC,SAAS,EACTC,MAAO,IA4CMA,EAzCD,WAAmD,IAAlDjG,EAAiD,uDAAzC8F,EAAyC,yCAA5BI,EAA4B,EAA5BA,KAAMD,EAAsB,EAAtBA,MAAOzD,EAAe,EAAfA,GAAIoC,EAAW,EAAXA,KACnD,OAAQsB,GACN,KAAKX,EAAaC,WAChB,OAAO,2BACFxF,GADL,IAEE+F,WAAW,EACXC,SAAS,IAEb,KAAKT,EAAaE,cAChB,OAAO,2BACFzF,GADL,IAEE+F,WAAW,EACXC,SAAS,EACTC,UAEJ,KAAKV,EAAaG,cAChB,OAAO,2BACF1F,GADL,IAEE+F,WAAW,EACXC,SAAS,IAEb,KAAKT,EAAaI,SAChB,OAAO,2BACF3F,GADL,IAEEiG,MAAM,GAAD,mBAAMjG,EAAMiG,OAAZ,CAAmB,CAAEzD,KAAIoC,YAElC,KAAKW,EAAaK,YAChB,OAAO,2BACF5F,GADL,IAEEiG,MAAO,YAAIjG,EAAMiG,OAAOxD,QAAO,SAAA0D,GAAI,OAAIA,EAAK3D,KAAOA,OAEvD,KAAK+C,EAAaM,UAChB,OAAO,2BACF7F,GADL,IAEEiG,MAAO,YAAIjG,EAAMiG,OAAOG,KAAI,SAAAD,GAAI,OAAKA,EAAK3D,KAAOA,EAAZ,2BAAsB2D,GAAtB,IAA4BvB,SAASuB,OAE9E,QACE,OAAOnG,IC9BA2E,EAAU,SAACnC,EAAIoC,GAAL,MAAe,CACpCsB,KAAMX,EAAaI,SACnBnD,KACAoC,SAGWC,EAAW,SAACrC,EAAIoC,GAAL,MAAe,CACrCsB,KAAMX,EAAaM,UACnBrD,KACAoC,SAGWF,EAAa,SAAAlC,GAAE,MAAK,CAC/B0D,KAAMX,EAAaK,YACnBpD,OCEa6D,EAvBU,WAAO,IAAD,EACHvB,EAAuB3C,EAAcC,IAAK0D,EAAWG,GADlD,mBACtBjG,EADsB,KACfqF,EADe,KAGvBiB,EAAYC,sBAAW,sBAAC,8BAAA1D,EAAA,6DAC5BwC,EDV4B,CAC9Ba,KAAMX,EAAaC,aCQW,kBAILhB,EAAIC,WAJC,OAIpB+B,EAJoB,OAKpBC,EAAiBpE,EAAQM,SAAS6D,GAExCnB,EDZgC,CACpCa,KAAMX,EAAaE,cACnBQ,MCU0BQ,IAPI,gDAS1BpB,EDT6B,CACjCa,KAAMX,EAAaG,gBCDW,yDAW3B,CAACL,IAMJ,OAJAC,qBAAU,WACRgB,MACC,CAACA,IAEG,CAACtG,EAAOqF,EAAUiB,I,QCjBZ9F,EAFGC,YAPH,CACbiG,MAAO,CACL/E,OAAQ,SACRgF,QAAS,SAAAC,GAAY,OAAKA,EAAe,cAAgB,WCAvDC,EAAiB,SAAC,GAAkB,IAAhBhG,EAAe,EAAfA,SAElBK,EAAUV,IADOK,GAGvB,OACE,kBAACiG,EAAA,EAAD,CAAO9F,UAAWE,EAAQwF,OACxB,kBAACK,EAAA,EAAD,CAAYhG,MAAM,UAAUiG,MAAM,UAAlC,yBAGCnG,IASPgG,EAAepF,aAAe,CAC5BZ,SAAU,MAGGgG,Q,kBCjBArG,EAFGC,YANH,CACbwG,OAAQ,CACNC,OAAQ,SAAAC,GAAI,6BAAoBA,EAApB,WCEVC,EAAS,SAAC,GAA0C,IAAxCD,EAAuC,EAAvCA,KAAMpG,EAAiC,EAAjCA,MAAOC,EAA0B,EAA1BA,UAAcC,EAAY,4CACjDC,EAAUV,EAAU2G,GACpBE,EAAgBjG,IAAWF,EAAQ+F,OAAQjG,GAEjD,OACE,kBAACsG,EAAA,EAAD,CAAMtG,UAAWqG,EAAeE,QAAQ,SAASC,WAAW,SAASC,WAAS,GAC5E,kBAACC,EAAA,EAAD,iBAAsBzG,EAAtB,CAA6BkG,KAAMA,EAAMpG,MAAOA,OAWtDqG,EAAO3F,aAAe,CACpB0F,KAAM,IACNpG,MAAO,UACPC,UAAW,IAGEoG,QCnBFO,EAAeC,wBAAc9B,EAAUG,OACvC4B,GAAkBD,yBAHP,eAKXE,GAAgB,SAAC,GAAkB,IAAhBjH,EAAe,EAAfA,SAAe,EACRwF,IADQ,mBACtCrG,EADsC,KAC/BqF,EAD+B,KACrBiB,EADqB,KAErCP,EAA8B/F,EAA9B+F,UAAWC,EAAmBhG,EAAnBgG,QAASC,EAAUjG,EAAViG,MAE5B,OAAID,EAEA,kBAAC,EAAD,KACE,kBAAC,EAAD,CAAYnE,QAASyE,GAArB,cAKFP,EAAkB,kBAAC,EAAD,MAGpB,kBAAC4B,EAAaI,SAAd,CAAuBC,MAAO/B,GAC5B,kBAAC4B,GAAgBE,SAAjB,CAA0BC,MAAO3C,GAAWxE,K,oBCZnCL,GAFGC,YAbH,CACbwH,SAAU,CACRf,OAAQ,QAEVgB,aAAc,CACZnH,MAAO,OACPoH,WAAY,SACZC,SAAU,SACVC,aAAc,WACdC,YAAa,UCLXC,GAAe,SAAC,GAAkB,IAAhB3D,EAAe,EAAfA,KAAMpC,EAAS,EAATA,GACpBoB,EAAQ4E,cAAR5E,IACF1C,EAAUV,KAEhB,OACE,4BACE,kBAACiI,GAAA,EAAD,CAAUzH,UAAWE,EAAQ+G,SAAU3G,UAAWD,IAAMG,GAAE,UAAKoC,EAAL,YAAYpB,GAAMd,QAAM,GAChF,kBAACgH,GAAA,EAAD,CAAc1H,UAAWE,EAAQgH,cAAetD,MAWxD2D,GAAa9G,aAAe,CAC1BmD,KAAM,eAGO+D,sBAAKJ,ICLLK,GAlBE,WACf,IAAM3C,EAAQ4C,qBAAWlB,GACnBmB,EAAc7C,EAAM8C,OAAS,EAEnC,OAAK9C,EAAM8C,OAGT,kBAACC,EAAA,EAAD,KACG/C,EAAMG,KAAI,SAACD,EAAM8C,GAAP,OACT,kBAAC,WAAD,CAAUlE,IAAKoB,EAAK3D,IAClB,kBAAC,GAAiB2D,GACjB8C,EAAIH,GAAe,kBAACI,EAAA,EAAD,WAPF,MCabC,GAfF,WAAO,IACVvF,EAAQ4E,cAAR5E,IAER,OACE,oCACE,kBAAC,EAAD,CAAU9C,KAAI,UAAK8C,EAAL,SACZ,kBAAC,EAAD,2BAEF,kBAACkD,EAAA,EAAD,KACE,kBAAC,GAAD,S,UCTOsC,GAPK,CAClBC,GAAI,KACJC,GAAI,KACJC,GAAI,KACJC,GAAI,MCYSC,GAdO,WAAwB,IAAvBC,EAAsB,uDAAP,GAAO,EACjBC,mBAASD,GADQ,mBACpC1B,EADoC,KAC7B4B,EAD6B,KAGrCC,EAAe,SAAC,GAA2B,IAAf7B,EAAc,EAAxB8B,OAAU9B,MAChC4B,EAAS5B,IAGL+B,EAAQ,WACZH,EAAS,KAGX,MAAO,CAAC5B,EAAO6B,EAAcE,ICGhBC,GAdG,SAAAN,GAAiB,IAAD,EACRC,mBAASD,GADD,mBACzBO,EADyB,KACnBC,EADmB,KAWhC,MAAO,CAACD,EARW,WACjBC,GAAQ,IAGU,WAClBA,GAAQ,M,mBCAGC,GAPO,SAAApF,GACpB,IACQqF,EADMC,eACND,YAER,OAAOE,aAAcF,EAAYG,KAAKxF,K,kDCIlCyF,GAAa,SAAC,GAAD,IAAG3J,EAAH,EAAGA,SAAU4J,EAAb,EAAaA,MAAOC,EAApB,EAAoBA,WAAYT,EAAhC,EAAgCA,KAAMU,EAAtC,EAAsCA,YAAgB1J,EAAtD,6EACjB,kBAAC2J,GAAA,EAAD,iBACM3J,EADN,CAEEyJ,WAAYA,EACZT,KAAMA,EACNY,QAASF,EACTG,kBAAgB,4BAEhB,kBAACC,GAAA,EAAD,CAAavI,GAAG,2BAA2BiI,GAC3C,kBAACO,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KAAoBpK,IAEtB,kBAACqK,GAAA,EAAD,KACE,kBAACnJ,EAAA,EAAD,CAAQF,QAAS8I,EAAa5J,MAAM,UAAUoK,WAAS,GAAvD,SAeNX,GAAW/I,aAAe,CACxBZ,SAAU,KACV4J,MAAO,eACPC,YAAY,EACZT,MAAM,EACNU,YAAa,cAGAH,UCpCAhK,GAFGC,YAPH,CACbiG,MAAO,CACL/E,OAAQ,SACRgF,QAAS,YCmEEyE,GA1DE,WACf,IAAMC,EAAUC,cACR9I,EAAO+I,cAAP/I,GACF6C,EAAWwD,qBAAWhB,IACtB5B,EAAQ4C,qBAAWlB,GAJJ,EAKmBqC,IAAU,GAL7B,mBAKdC,EALc,KAKRuB,EALQ,KAKIb,EALJ,KAMfD,EAAaP,GAAcf,GAAYE,IACvCnD,EAAO9D,EAAQC,YAAY2D,EAAOzD,GAPnB,EAQgBiH,GAActD,EAAKvB,MARnC,mBAQdoD,EARc,KAQP6B,EARO,KAQOE,EARP,KASf7I,EAAUV,KAEViL,EAAYtF,EAAK3D,GAAK,gBAAkB,iBAExCkJ,EAAQ,uCAAG,WAAMC,GAAN,qBAAA9I,EAAA,6DACf8I,EAAEC,iBAEIC,EAAa1F,EAAK3D,GAAKqC,EAAWF,EAClCmH,EAAS3F,EAAK3D,IAAL,UAAcH,EAAQkB,mBAAmB0C,IAClD8F,EAAgBF,EAAWG,KAC3BC,EAAYzH,EAAIuH,GANP,kBASPE,EAAUH,EAAQ9D,GATX,OAUb3C,EAASwG,EAAWC,EAAQ9D,IAC5B+B,IACAsB,EAAQa,KAAR,iBAAuBJ,IAZV,kDAcb5L,QAAQK,MAAR,KAAiB,KAAE4L,SACnBX,IAfa,0DAAH,sDAmBd,OACE,oCACE,kBAAC1E,EAAA,EAAD,CAAO9F,UAAWE,EAAQwF,OACxB,0BAAMgF,SAAUA,GACd,kBAACU,GAAA,EAAD,CACEpE,MAAOA,EACPqE,SAAUxC,EACV7G,MAAOyI,EACP9J,OAAO,SACPM,WAAS,EACTkJ,WAAS,MAIf,kBAAC,GAAD,CACElB,KAAMA,EACNU,YAAaA,EACbD,WAAYA,EACZD,MAAM,2BAJR,oC,kDCxBSjK,GAFGC,YAhCH,CACbgH,UAAW,CACTP,OAAQ,OACRoF,QAAS,OACTC,SAAU,WACVC,UAAW,OACXhF,WAAY,SACZb,QAAS,WACT8F,eAAgB,aAChB9L,eAAgB,OAChB+L,gBAAiB,QAEnBC,QAAS,CACPC,KAAM,WACNC,SAAU,EACVlL,OAAQ,SAEVmL,WAAY,CACV/L,MAAO,OACPoH,WAAY,SACZC,SAAU,SACVC,aAAc,WACdC,YAAa,QAEfyE,gBAAiB,CACfC,IAAK,MACLC,MAAO,OACPV,SAAU,WACVW,UAAW,sBCWAC,GAnCA,CACb,CACE3K,GAAI,OACJ4K,OAAO,EACPC,KAAM,IACN/L,UAAWY,GAEb,CACEM,GAAI,QACJ4K,OAAO,EACPC,KAAM,SACN/L,UAAW6H,IAEb,CACE3G,GAAI,UACJ6K,KAAM,aACN/L,UAAW8J,IAEb,CACE5I,GAAI,OACJ4K,OAAO,EACPC,KAAM,aACN/L,UCZiB,WAAO,IAClBsC,EAAQ4E,cAAR5E,IACFyH,EAAUC,cACR9I,EAAO+I,cAAP/I,GACF6C,EAAWwD,qBAAWhB,IACtB5B,EAAQ4C,qBAAWlB,GALA,EAMeqC,IAAU,GANzB,mBAMlBC,EANkB,KAMZuB,EANY,KAMAb,EANA,KAOnBD,EAAaP,GAAcf,GAAYE,IACvCpI,EAAUV,KAEV2F,EAAO9D,EAAQC,YAAY2D,EAAOzD,GAElC8K,EAAQ,uCAAG,WAAM3B,GAAN,SAAA9I,EAAA,6DACf8I,EAAEC,iBADa,kBAIPpH,EAAIE,WAAWyB,EAAK3D,IAJb,OAKb6C,EAASX,EAAWyB,EAAK3D,KACzB6I,EAAQa,KAAK,UANA,gDAQbV,IARa,yDAAH,sDAiBd,OACE,oCACE,kBAAC,EAAD,CAAU1K,KAAK,UACb,kBAAC,EAAD,kCAEF,kBAACgG,EAAA,EAAD,KACE,kBAACyG,GAAA,EAAD,CAAWvM,UAAWE,EAAQuG,WAC5B,kBAAC+F,GAAA,EAAD,CAAKxM,UAAWE,EAAQyL,SACtB,kBAAC5F,EAAA,EAAD,CAAY/F,UAAWE,EAAQ4L,WAAYxL,UAAU,QAClD6E,EAAKvB,OAGV,kBAAC4I,GAAA,EAAD,CAAKxM,UAAWE,EAAQ6L,iBACtB,kBAACU,GAAA,EAAD,CAAY5L,QAASyL,EAAUI,aAAW,UACxC,kBAACC,GAAA,EAAD,OAEF,kBAACF,GAAA,EAAD,CAAY5L,QArBP,SAAA8J,GACbA,EAAEC,iBACFP,EAAQa,KAAR,UAAgBtI,EAAhB,WAmBqC8J,aAAW,QACtC,kBAACE,GAAA,EAAD,UAKR,kBAAC,GAAD,CACE3D,KAAMA,EACNU,YAAaA,EACbD,WAAYA,EACZD,MAAM,2BAJR,qCDrCJ,CACEjI,GAAI,WACJ6K,KAAM,kBACN/L,UAAW8J,IAEb,CACE5I,GAAI,UACJlB,UEhCY,kBACd,kBAAC,EAAD,KACE,kBAAC,EAAD,CAAUR,KAAK,KACb,kBAAC,EAAD,iC,wCCiBSN,GAFGC,YArBH,CACbiG,MAAO,CACLC,QAAS,EACThF,OAAQ,EACRuF,OAAQ,QACRwF,gBAAiB,WAEnBmB,OAAQ,CACN3G,OAAQ,QAEV4G,KAAM,CACJnM,OAAQ,UAEVoM,IAAK,CACHpM,OAAQ,OACR4K,SAAU,QACVyB,OAAQ,EACRf,MAAO,KCsBIgB,GAhCC,SAAC,GAAkB,IAAhBpN,EAAe,EAAfA,SACXwK,EAAUC,cACR4C,EAAaC,cAAbD,SACFhN,EAAUV,KAEV4N,EAAiBF,EAASG,SAAS,SAEzC,OACE,kBAACvH,EAAA,EAAD,CAAO9F,UAAWE,EAAQwF,MAAO4H,UAAW,GAC1C,kBAACC,GAAA,EAAD,CAAQvN,UAAWE,EAAQ2M,OAAQ9M,MAAM,UAAUwL,SAAS,UAC1D,kBAACiC,GAAA,EAAD,KACE,kBAAC,EAAD,CAAU1N,KAAK,KAAf,mBAGJ,kBAACwG,EAAA,EAAD,CAAMtG,UAAWE,EAAQ4M,KAAMvG,QAAQ,SAASE,WAAS,GACvD,kBAACH,EAAA,EAAD,CAAMmH,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGC,MAAI,GAC9B,kBAAC,GAAD,KAAgB/N,KAGnBuN,GACC,kBAACS,GAAA,EAAD,CAAK7N,UAAWE,EAAQ6M,IAAKlM,QAASwJ,EAAQyD,OAAQ/N,MAAM,UAAU2M,aAAW,QAC/E,kBAACqB,GAAA,EAAD,S,oCCMKC,G,+MA9BbhP,MAAQ,CACNgG,SAAS,G,EAWXiJ,OAAS,kBAAMjQ,OAAOC,SAASgQ,U,wDAErB,IACAjJ,EAAYkJ,KAAKlP,MAAjBgG,QACAnF,EAAaqO,KAAKC,MAAlBtO,SAER,OAAImF,EAEA,kBAAC,EAAD,KACE,kBAAC,EAAD,CAAYnE,QAASqN,KAAKD,QAA1B,oBAKCpO,K,kDArBP,MAAO,CAAEmF,SAAS,O,GANMoJ,aCmBbC,GAlBH,kBACV,kBAAC,aAAD,KACE,kBAAC,GAAD,KACE,kBAAC,IAAD,CAAQC,SAAS,iBACf,kBAAC,GAAD,KACE,kBAAC,IAAD,KACGnC,GAAO/G,KAAI,gBAAG5D,EAAH,EAAGA,GAAI4K,EAAP,EAAOA,MAAOC,EAAd,EAAcA,KAAiB+B,EAA/B,EAAoB9N,UAApB,OACV,kBAAC,IAAD,CAAOyD,IAAKvC,EAAI4K,MAAOA,EAAOC,KAAMA,GAClC,kBAAC+B,EAAD,gB,OCRhBG,iBAAO,kBAAC,GAAD,MAASC,SAASC,eAAe,SvCcjC,SAAkBnQ,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAImQ,IAAIC,eAAwB3Q,OAAOC,SAAS6B,MACpD8O,SAAW5Q,OAAOC,SAAS2Q,OAIvC,OAGF5Q,OAAO6Q,iBAAiB,QAAQ,WAC9B,IAAMxQ,EAAK,UAAMsQ,eAAN,sBAEP7Q,IAgEV,SAAiCO,EAAOC,GAEtC2E,MAAM5E,EAAO,CACX0E,QAAS,CAAE,iBAAkB,YAE5BrE,MAAK,SAAAwE,GAEJ,IAAM4L,EAAc5L,EAASH,QAAQgM,IAAI,gBAEnB,MAApB7L,EAAS8L,QACO,MAAfF,IAA8D,IAAvCA,EAAYG,QAAQ,cAG5C1Q,UAAUC,cAAc0Q,MAAMxQ,MAAK,SAAAC,GACjCA,EAAawQ,aAAazQ,MAAK,WAC7BV,OAAOC,SAASgQ,eAKpB7P,EAAgBC,EAAOC,MAG1BgB,OAAM,WACLJ,QAAQC,IAAI,oEAtFViQ,CAAwB/Q,EAAOC,GAI/BC,UAAUC,cAAc0Q,MAAMxQ,MAAK,WACjCQ,QAAQC,IACN,iHAMJf,EAAgBC,EAAOC,OuCxC/BE,I","file":"static/js/main.c61cc333.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst styles = {\n  link: {\n    '&:hover': {\n      textDecoration: 'none',\n    },\n  },\n};\n\nconst useStyles = makeStyles(styles);\n\nexport default useStyles;\n","import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport propTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { Link } from '@material-ui/core';\nimport useStyles from './styles';\n\nconst TodoLink = ({ children, href, color, className, ...attrs }) => {\n  const classes = useStyles();\n  const linkClasses = classNames(classes.link, className);\n\n  return (\n    <Link {...attrs} component={RouterLink} to={href} color={color} className={linkClasses}>\n      {children}\n    </Link>\n  );\n};\n\nTodoLink.propTypes = {\n  children: propTypes.node.isRequired,\n  href: propTypes.string.isRequired,\n  color: propTypes.string,\n  className: propTypes.string,\n};\n\nTodoLink.defaultProps = {\n  color: 'inherit',\n  className: '',\n};\n\nexport default TodoLink;\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst styles = {\n  button: {\n    margin: '1rem 0',\n  },\n};\n\nconst useStyles = makeStyles(styles);\n\nexport default useStyles;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { Button } from '@material-ui/core';\nimport useStyles from './styles';\n\nconst TodoButton = ({ children, color, className, onClick, ...attrs }) => {\n  const classes = useStyles();\n  const buttonClasses = classNames(classes.button, className);\n\n  return (\n    <Button\n      {...attrs}\n      color={color}\n      className={buttonClasses}\n      onClick={onClick}\n      variant=\"contained\"\n      fullWidth\n    >\n      {children}\n    </Button>\n  );\n};\n\nTodoButton.propTypes = {\n  children: propTypes.node.isRequired,\n  color: propTypes.string,\n  className: propTypes.string,\n  onClick: propTypes.func,\n};\n\nTodoButton.defaultProps = {\n  color: 'primary',\n  className: '',\n  onClick: () => {},\n};\n\nexport default TodoButton;\n","import React from 'react';\nimport TodoLink from '../TodoLink';\nimport TodoButton from '../TodoButton';\n\nconst Home = () => (\n  <TodoLink href=\"/tasks\">\n    <TodoButton>Go to the todo list</TodoButton>\n  </TodoLink>\n);\n\nexport default Home;\n","const LOCAL_STORAGE = {\n  KEY: 'tasks',\n};\n\nexport default LOCAL_STORAGE;\n","const helpers = {\n  getDataById: (dataArray, id) => dataArray.filter(data => data.id === id)[0] || {},\n\n  sortById: data => data.sort((a, b) => a.id - b.id),\n\n  addToLocalStorage: (label, data) => window.localStorage.setItem(label, JSON.stringify(data)),\n  getFromLocalStorage: label => window.localStorage.getItem(label),\n\n  getNextItemIdInArr: arr => {\n    const lastItemInArr = arr.slice(-1)[0] || {};\n    const { id = 0 } = lastItemInArr;\n    return +id + 1;\n  },\n\n  getApiInstance: async (method, url, data) => {\n    let init = { method };\n    const initWithData = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(data),\n    };\n\n    init = data ? { ...init, ...initWithData } : init;\n\n    try {\n      const response = await fetch(url, init);\n      return await response.json();\n    } catch (e) {\n      throw new Error(e);\n    }\n  },\n};\n\nexport default helpers;\n","const PATHS = {\n  BASE_PATH: 'https://5ee4fc53ddcea00016a37177.mockapi.io/api/v1',\n  TASKS_PATH: '/tasks',\n};\n\nexport default PATHS;\n","import PATHS from '../constants/paths';\nimport helpers from '../utils/helpers';\n\nconst api = {\n  getTasks: () => helpers.getApiInstance('GET', `${PATHS.BASE_PATH}${PATHS.TASKS_PATH}`),\n  removeTask: id => helpers.getApiInstance('DELETE', `${PATHS.BASE_PATH}${PATHS.TASKS_PATH}/${id}`),\n  addTask: (id, text) =>\n    helpers.getApiInstance('POST', `${PATHS.BASE_PATH}${PATHS.TASKS_PATH}`, { id, text }),\n  editTask: (id, text) =>\n    helpers.getApiInstance('PUT', `${PATHS.BASE_PATH}${PATHS.TASKS_PATH}/${id}`, { id, text }),\n};\n\nexport default api;\n","import { useReducer, useEffect } from 'react';\nimport helpers from '../utils/helpers';\n\nconst useLocalStorageReducer = (key, defaultVal, reducer) => {\n  const [state, dispatch] = useReducer(reducer, defaultVal, () => {\n    let val;\n\n    try {\n      const data = helpers.getFromLocalStorage(key) || `${defaultVal}`;\n      val = JSON.parse(data);\n    } catch {\n      val = defaultVal;\n    }\n\n    return val;\n  });\n\n  useEffect(() => {\n    helpers.addToLocalStorage(key, state);\n  }, [key, state]);\n\n  return [state, dispatch];\n};\n\nexport default useLocalStorageReducer;\n","const ACTION_TYPES = {\n  FETCH_INIT: 'FETCH_INIT',\n  FETCH_SUCCESS: 'FETCH_SUCCESS',\n  FETCH_FAILURE: 'FETCH_FAILURE',\n  ADD_TASK: 'ADD_TASK',\n  REMOVE_TASK: 'REMOVE_TASK',\n  EDIT_TASK: 'EDIT_TASK',\n};\n\nexport default ACTION_TYPES;\n","import ACTION_TYPES from '../constants/actionTypes';\n\nexport const initState = {\n  isLoading: true,\n  isError: false,\n  tasks: [],\n};\n\nconst tasks = (state = initState, { type, tasks, id, text }) => {\n  switch (type) {\n    case ACTION_TYPES.FETCH_INIT:\n      return {\n        ...state,\n        isLoading: true,\n        isError: false,\n      };\n    case ACTION_TYPES.FETCH_SUCCESS:\n      return {\n        ...state,\n        isLoading: false,\n        isError: false,\n        tasks,\n      };\n    case ACTION_TYPES.FETCH_FAILURE:\n      return {\n        ...state,\n        isLoading: false,\n        isError: true,\n      };\n    case ACTION_TYPES.ADD_TASK:\n      return {\n        ...state,\n        tasks: [...state.tasks, { id, text }],\n      };\n    case ACTION_TYPES.REMOVE_TASK:\n      return {\n        ...state,\n        tasks: [...state.tasks].filter(task => task.id !== id),\n      };\n    case ACTION_TYPES.EDIT_TASK:\n      return {\n        ...state,\n        tasks: [...state.tasks].map(task => (task.id === id ? { ...task, text } : task)),\n      };\n    default:\n      return state;\n  }\n};\n\nexport default tasks;\n","import ACTION_TYPES from '../constants/actionTypes';\n\nexport const fetchInit = () => ({\n  type: ACTION_TYPES.FETCH_INIT,\n});\n\nexport const fetchSuccess = tasks => ({\n  type: ACTION_TYPES.FETCH_SUCCESS,\n  tasks,\n});\n\nexport const fetchFailure = () => ({\n  type: ACTION_TYPES.FETCH_FAILURE,\n});\n\nexport const addTask = (id, text) => ({\n  type: ACTION_TYPES.ADD_TASK,\n  id,\n  text,\n});\n\nexport const editTask = (id, text) => ({\n  type: ACTION_TYPES.EDIT_TASK,\n  id,\n  text,\n});\n\nexport const removeTask = id => ({\n  type: ACTION_TYPES.REMOVE_TASK,\n  id,\n});\n","import { useEffect, useCallback } from 'react';\nimport LOCAL_STORAGE from '../constants/localStorage';\nimport helpers from '../utils/helpers';\nimport api from '../services/api';\nimport useLocalStorageReducer from './useLocalStorageReducer';\nimport tasks, { initState } from '../reducer/tasks';\nimport { fetchInit, fetchSuccess, fetchFailure } from '../actions/actionCreator';\n\nconst useFetchTaskList = () => {\n  const [state, dispatch] = useLocalStorageReducer(LOCAL_STORAGE.KEY, initState, tasks);\n\n  const fetchData = useCallback(async () => {\n    dispatch(fetchInit());\n\n    try {\n      const result = await api.getTasks();\n      const sortedTaskList = helpers.sortById(result);\n\n      dispatch(fetchSuccess(sortedTaskList));\n    } catch {\n      dispatch(fetchFailure());\n    }\n  }, [dispatch]);\n\n  useEffect(() => {\n    fetchData();\n  }, [fetchData]);\n\n  return [state, dispatch, fetchData];\n};\n\nexport default useFetchTaskList;\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst styles = {\n  paper: {\n    margin: '1rem 0',\n    padding: withChildren => (withChildren ? '1rem 1rem 0' : '1rem'),\n  },\n};\n\nconst useStyles = makeStyles(styles);\n\nexport default useStyles;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Paper, Typography } from '@material-ui/core';\nimport useStyles from './styles';\n\nconst ErrorIndicator = ({ children }) => {\n  const withChildren = !!children;\n  const classes = useStyles(withChildren);\n\n  return (\n    <Paper className={classes.paper}>\n      <Typography color=\"inherit\" align=\"center\">\n        Something went wrong!\n      </Typography>\n      {children}\n    </Paper>\n  );\n};\n\nErrorIndicator.propTypes = {\n  children: PropTypes.node,\n};\n\nErrorIndicator.defaultProps = {\n  children: null,\n};\n\nexport default ErrorIndicator;\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst styles = {\n  loader: {\n    height: size => `calc(100vh - ${size}px)`,\n  },\n};\n\nconst useStyles = makeStyles(styles);\n\nexport default useStyles;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { Grid, CircularProgress } from '@material-ui/core';\nimport useStyles from './styles';\n\nconst Loader = ({ size, color, className, ...attrs }) => {\n  const classes = useStyles(size);\n  const loaderClasses = classNames(classes.loader, className);\n\n  return (\n    <Grid className={loaderClasses} justify=\"center\" alignItems=\"center\" container>\n      <CircularProgress {...attrs} size={size} color={color} />\n    </Grid>\n  );\n};\n\nLoader.propTypes = {\n  size: propTypes.number,\n  color: propTypes.string,\n  className: propTypes.string,\n};\n\nLoader.defaultProps = {\n  size: 100,\n  color: 'primary',\n  className: '',\n};\n\nexport default Loader;\n","import React, { createContext } from 'react';\nimport propTypes from 'prop-types';\nimport useFetchTaskList from '../hooks/useFetchTaskList';\nimport { initState } from '../reducer/tasks';\nimport ErrorIndicator from '../components/ErrorIndicator';\nimport TodoButton from '../components/TodoButton';\nimport Loader from '../components/Loader';\n\nconst defaultDispatch = () => {};\n\nexport const TasksContext = createContext(initState.tasks);\nexport const DispatchContext = createContext(defaultDispatch);\n\nexport const TasksProvider = ({ children }) => {\n  const [state, dispatch, fetchData] = useFetchTaskList();\n  const { isLoading, isError, tasks } = state;\n\n  if (isError) {\n    return (\n      <ErrorIndicator>\n        <TodoButton onClick={fetchData}>Try again</TodoButton>\n      </ErrorIndicator>\n    );\n  }\n\n  if (isLoading) return <Loader />;\n\n  return (\n    <TasksContext.Provider value={tasks}>\n      <DispatchContext.Provider value={dispatch}>{children}</DispatchContext.Provider>\n    </TasksContext.Provider>\n  );\n};\n\nTasksProvider.propTypes = {\n  children: propTypes.node.isRequired,\n};\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst styles = {\n  listItem: {\n    height: '64px',\n  },\n  listItemText: {\n    color: '#000',\n    whiteSpace: 'nowrap',\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n    marginRight: '7rem',\n  },\n};\n\nconst useStyles = makeStyles(styles);\n\nexport default useStyles;\n","import React, { memo } from 'react';\nimport { Link, useRouteMatch } from 'react-router-dom';\nimport propTypes from 'prop-types';\nimport { ListItemText, ListItem } from '@material-ui/core';\nimport useStyles from './styles';\n\nconst TodoListItem = ({ text, id }) => {\n  const { url } = useRouteMatch();\n  const classes = useStyles();\n\n  return (\n    <li>\n      <ListItem className={classes.listItem} component={Link} to={`${url}/${id}`} button>\n        <ListItemText className={classes.listItemText}>{text}</ListItemText>\n      </ListItem>\n    </li>\n  );\n};\n\nTodoListItem.propTypes = {\n  id: propTypes.oneOfType([propTypes.number, propTypes.string]).isRequired,\n  text: propTypes.string,\n};\n\nTodoListItem.defaultProps = {\n  text: 'Simple todo',\n};\n\nexport default memo(TodoListItem);\n","import React, { useContext, Fragment } from 'react';\nimport { List, Divider } from '@material-ui/core';\nimport { TasksContext } from '../../contexts/tasks';\nimport TodoListItem from '../TodoListItem';\n\nconst TodoList = () => {\n  const tasks = useContext(TasksContext);\n  const tasksLength = tasks.length - 1;\n\n  if (!tasks.length) return null;\n\n  return (\n    <List>\n      {tasks.map((task, i) => (\n        <Fragment key={task.id}>\n          <TodoListItem {...task} />\n          {i < tasksLength && <Divider />}\n        </Fragment>\n      ))}\n    </List>\n  );\n};\n\nexport default TodoList;\n","import React from 'react';\nimport { useRouteMatch } from 'react-router-dom';\nimport { Paper } from '@material-ui/core';\nimport TodoLink from '../TodoLink';\nimport TodoButton from '../TodoButton';\nimport TodoList from '../TodoList';\n\nconst Todo = () => {\n  const { url } = useRouteMatch();\n\n  return (\n    <>\n      <TodoLink href={`${url}/new`}>\n        <TodoButton>Create a new todo</TodoButton>\n      </TodoLink>\n      <Paper>\n        <TodoList />\n      </Paper>\n    </>\n  );\n};\n\nexport default Todo;\n","const BREAKPOINTS = {\n  XS: 'xs',\n  SM: 'sm',\n  MD: 'md',\n  LG: 'lg',\n};\n\nexport default BREAKPOINTS;\n","import { useState } from 'react';\n\nconst useInputState = (initialValue = '') => {\n  const [value, setValue] = useState(initialValue);\n\n  const handleChange = ({ target: { value } }) => {\n    setValue(value);\n  };\n\n  const reset = () => {\n    setValue('');\n  };\n\n  return [value, handleChange, reset];\n};\n\nexport default useInputState;\n","import { useState } from 'react';\n\nconst useDialog = initialValue => {\n  const [open, setOpen] = useState(initialValue);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return [open, handleOpen, handleClose];\n};\n\nexport default useDialog;\n","import { useTheme } from '@material-ui/core/styles';\nimport { useMediaQuery } from '@material-ui/core';\n\nconst useBreakpoint = key => {\n  const theme = useTheme();\n  const { breakpoints } = theme;\n\n  return useMediaQuery(breakpoints.down(key));\n};\n\nexport default useBreakpoint;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogContentText,\n  DialogActions,\n  Button,\n} from '@material-ui/core';\n\nconst TodoDialog = ({ children, title, fullScreen, open, handleClose, ...attrs }) => (\n  <Dialog\n    {...attrs}\n    fullScreen={fullScreen}\n    open={open}\n    onClose={handleClose}\n    aria-labelledby=\"responsive-dialog-title\"\n  >\n    <DialogTitle id=\"responsive-dialog-title\">{title}</DialogTitle>\n    <DialogContent>\n      <DialogContentText>{children}</DialogContentText>\n    </DialogContent>\n    <DialogActions>\n      <Button onClick={handleClose} color=\"primary\" autoFocus>\n        OK\n      </Button>\n    </DialogActions>\n  </Dialog>\n);\n\nTodoDialog.propTypes = {\n  children: propTypes.node,\n  title: propTypes.string,\n  fullScreen: propTypes.bool,\n  open: propTypes.bool,\n  handleClose: propTypes.func,\n};\n\nTodoDialog.defaultProps = {\n  children: null,\n  title: 'Dialog title',\n  fullScreen: false,\n  open: false,\n  handleClose: () => {},\n};\n\nexport default TodoDialog;\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst styles = {\n  paper: {\n    margin: '1rem 0',\n    padding: '0 1rem',\n  },\n};\n\nconst useStyles = makeStyles(styles);\n\nexport default useStyles;\n","import React, { useContext } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { Paper, TextField } from '@material-ui/core';\nimport BREAKPOINTS from '../../constants/breakpoints';\nimport helpers from '../../utils/helpers';\nimport api from '../../services/api';\nimport useInputState from '../../hooks/useInputState';\nimport useDialog from '../../hooks/useDialog';\nimport useBreakpoint from '../../hooks/useBreakpoint';\nimport { DispatchContext, TasksContext } from '../../contexts/tasks';\nimport { addTask, editTask } from '../../actions/actionCreator';\nimport TodoDialog from '../TodoDialog';\nimport useStyles from './styles';\n\nconst TodoForm = () => {\n  const history = useHistory();\n  const { id } = useParams();\n  const dispatch = useContext(DispatchContext);\n  const tasks = useContext(TasksContext);\n  const [open, handleOpen, handleClose] = useDialog(false);\n  const fullScreen = useBreakpoint(BREAKPOINTS.SM);\n  const task = helpers.getDataById(tasks, id);\n  const [value, handleChange, reset] = useInputState(task.text);\n  const classes = useStyles();\n\n  const taskLabel = task.id ? 'Edit the todo' : 'Add a new todo';\n\n  const onSubmit = async e => {\n    e.preventDefault();\n\n    const taskAction = task.id ? editTask : addTask;\n    const taskId = task.id || `${helpers.getNextItemIdInArr(tasks)}`;\n    const apiMethodName = taskAction.name;\n    const apiMethod = api[apiMethodName];\n\n    try {\n      await apiMethod(taskId, value);\n      dispatch(taskAction(taskId, value));\n      reset();\n      history.push(`/tasks/${taskId}`);\n    } catch (e) {\n      console.error(e, e.message);\n      handleOpen();\n    }\n  };\n\n  return (\n    <>\n      <Paper className={classes.paper}>\n        <form onSubmit={onSubmit}>\n          <TextField\n            value={value}\n            onChange={handleChange}\n            label={taskLabel}\n            margin=\"normal\"\n            fullWidth\n            autoFocus\n          />\n        </form>\n      </Paper>\n      <TodoDialog\n        open={open}\n        handleClose={handleClose}\n        fullScreen={fullScreen}\n        title=\"Something went wrong...\"\n      >\n        Error, please try again later.\n      </TodoDialog>\n    </>\n  );\n};\n\nexport default TodoForm;\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst styles = {\n  container: {\n    height: '64px',\n    display: 'flex',\n    position: 'relative',\n    textAlign: 'left',\n    alignItems: 'center',\n    padding: '8px 16px',\n    justifyContent: 'flex-start',\n    textDecoration: 'none',\n    backgroundColor: '#fff',\n  },\n  textBox: {\n    flex: '1 1 auto',\n    minWidth: 0,\n    margin: '4px 0',\n  },\n  typography: {\n    color: '#000',\n    whiteSpace: 'nowrap',\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n    marginRight: '7rem',\n  },\n  secondaryAction: {\n    top: '50%',\n    right: '16px',\n    position: 'absolute',\n    transform: 'translateY(-50%)',\n  },\n};\n\nconst useStyles = makeStyles(styles);\n\nexport default useStyles;\n","import Home from '../components/Home';\nimport Todo from '../components/Todo';\nimport TodoForm from '../components/TodoForm';\nimport TodoItem from '../components/TodoItem';\nimport NoMatch from '../components/NoMatch';\n\nconst ROUTES = [\n  {\n    id: 'home',\n    exact: true,\n    path: '/',\n    component: Home,\n  },\n  {\n    id: 'tasks',\n    exact: true,\n    path: '/tasks',\n    component: Todo,\n  },\n  {\n    id: 'newTask',\n    path: '/tasks/new',\n    component: TodoForm,\n  },\n  {\n    id: 'task',\n    exact: true,\n    path: '/tasks/:id',\n    component: TodoItem,\n  },\n  {\n    id: 'editTask',\n    path: '/tasks/:id/edit',\n    component: TodoForm,\n  },\n  {\n    id: 'NoMatch',\n    component: NoMatch,\n  },\n];\n\nexport default ROUTES;\n","import React, { useContext } from 'react';\nimport { useHistory, useRouteMatch, useParams } from 'react-router-dom';\nimport { Paper, Typography, Box, IconButton, Container } from '@material-ui/core';\nimport { Delete as DeleteIcon, Edit as EditIcon } from '@material-ui/icons';\nimport BREAKPOINTS from '../../constants/breakpoints';\nimport helpers from '../../utils/helpers';\nimport api from '../../services/api';\nimport useDialog from '../../hooks/useDialog';\nimport useBreakpoint from '../../hooks/useBreakpoint';\nimport { DispatchContext, TasksContext } from '../../contexts/tasks';\nimport { removeTask } from '../../actions/actionCreator';\nimport TodoLink from '../TodoLink';\nimport TodoButton from '../TodoButton';\nimport TodoDialog from '../TodoDialog';\nimport useStyles from './styles';\n\nconst TodoListItem = () => {\n  const { url } = useRouteMatch();\n  const history = useHistory();\n  const { id } = useParams();\n  const dispatch = useContext(DispatchContext);\n  const tasks = useContext(TasksContext);\n  const [open, handleOpen, handleClose] = useDialog(false);\n  const fullScreen = useBreakpoint(BREAKPOINTS.SM);\n  const classes = useStyles();\n\n  const task = helpers.getDataById(tasks, id);\n\n  const onRemove = async e => {\n    e.preventDefault();\n\n    try {\n      await api.removeTask(task.id);\n      dispatch(removeTask(task.id));\n      history.push('/tasks');\n    } catch {\n      handleOpen();\n    }\n  };\n\n  const onEdit = e => {\n    e.preventDefault();\n    history.push(`${url}/edit`);\n  };\n\n  return (\n    <>\n      <TodoLink href=\"/tasks\">\n        <TodoButton>Go back to the todo list</TodoButton>\n      </TodoLink>\n      <Paper>\n        <Container className={classes.container}>\n          <Box className={classes.textBox}>\n            <Typography className={classes.typography} component=\"span\">\n              {task.text}\n            </Typography>\n          </Box>\n          <Box className={classes.secondaryAction}>\n            <IconButton onClick={onRemove} aria-label=\"delete\">\n              <DeleteIcon />\n            </IconButton>\n            <IconButton onClick={onEdit} aria-label=\"edit\">\n              <EditIcon />\n            </IconButton>\n          </Box>\n        </Container>\n      </Paper>\n      <TodoDialog\n        open={open}\n        handleClose={handleClose}\n        fullScreen={fullScreen}\n        title=\"Something went wrong...\"\n      >\n        Error, please try again later.\n      </TodoDialog>\n    </>\n  );\n};\n\nexport default TodoListItem;\n","import React from 'react';\nimport ErrorIndicator from '../ErrorIndicator';\nimport TodoLink from '../TodoLink';\nimport TodoButton from '../TodoButton';\n\nconst NoMatch = () => (\n  <ErrorIndicator>\n    <TodoLink href=\"/\">\n      <TodoButton>Go to the home page</TodoButton>\n    </TodoLink>\n  </ErrorIndicator>\n);\n\nexport default NoMatch;\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst styles = {\n  paper: {\n    padding: 0,\n    margin: 0,\n    height: '100vh',\n    backgroundColor: '#fafafa',\n  },\n  appBar: {\n    height: '64px',\n  },\n  grid: {\n    margin: '1rem 0',\n  },\n  fab: {\n    margin: '1rem',\n    position: 'fixed',\n    bottom: 0,\n    right: 0,\n  },\n};\n\nconst useStyles = makeStyles(styles);\n\nexport default useStyles;\n","import React from 'react';\nimport { useLocation, useHistory } from 'react-router-dom';\nimport propTypes from 'prop-types';\nimport { Paper, AppBar, Toolbar, Grid, Fab } from '@material-ui/core';\nimport { ArrowBack as ArrowBackIcon } from '@material-ui/icons';\nimport { TasksProvider } from '../../contexts/tasks';\nimport TodoLink from '../TodoLink';\nimport useStyles from './styles';\n\nconst TodoApp = ({ children }) => {\n  const history = useHistory();\n  const { pathname } = useLocation();\n  const classes = useStyles();\n\n  const isTaskLocation = pathname.includes('tasks');\n\n  return (\n    <Paper className={classes.paper} elevation={0}>\n      <AppBar className={classes.appBar} color=\"primary\" position=\"static\">\n        <Toolbar>\n          <TodoLink href=\"/\">ToDo List API</TodoLink>\n        </Toolbar>\n      </AppBar>\n      <Grid className={classes.grid} justify=\"center\" container>\n        <Grid xs={11} md={8} lg={4} item>\n          <TasksProvider>{children}</TasksProvider>\n        </Grid>\n      </Grid>\n      {isTaskLocation && (\n        <Fab className={classes.fab} onClick={history.goBack} color=\"primary\" aria-label=\"back\">\n          <ArrowBackIcon />\n        </Fab>\n      )}\n    </Paper>\n  );\n};\n\nTodoApp.propTypes = {\n  children: propTypes.node.isRequired,\n};\n\nexport default TodoApp;\n","import React, { Component } from 'react';\nimport propTypes from 'prop-types';\nimport ErrorIndicator from '../ErrorIndicator';\nimport TodoButton from '../TodoButton';\n\nclass ErrorBoundary extends Component {\n  state = {\n    isError: false,\n  };\n\n  static getDerivedStateFromError() {\n    return { isError: true };\n  }\n\n  static propTypes = {\n    children: propTypes.node.isRequired,\n  };\n\n  reload = () => window.location.reload();\n\n  render() {\n    const { isError } = this.state;\n    const { children } = this.props;\n\n    if (isError) {\n      return (\n        <ErrorIndicator>\n          <TodoButton onClick={this.reload}>Reload the page</TodoButton>\n        </ErrorIndicator>\n      );\n    }\n\n    return children;\n  }\n}\n\nexport default ErrorBoundary;\n","import React, { StrictMode } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport ROUTES from './constants/routes';\nimport TodoApp from './components/TodoApp';\nimport ErrorBoundary from './components/ErrorBoundary';\n\nconst App = () => (\n  <StrictMode>\n    <ErrorBoundary>\n      <Router basename=\"/ToDoListAPI/\">\n        <TodoApp>\n          <Switch>\n            {ROUTES.map(({ id, exact, path, component: Component }) => (\n              <Route key={id} exact={exact} path={path}>\n                <Component />\n              </Route>\n            ))}\n          </Switch>\n        </TodoApp>\n      </Router>\n    </ErrorBoundary>\n  </StrictMode>\n);\n\nexport default App;\n","import React from 'react';\nimport { render } from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport App from './App';\nimport './styles/index.css';\n\nrender(<App />, document.getElementById('root'));\n\nserviceWorker.register();\n"],"sourceRoot":""}